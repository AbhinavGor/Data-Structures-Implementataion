#include<stdio.h>
#include<sys/types.h>
#include<pthread.h>
#include<semaphore.h>
sem_t mutex;
sem_t full;
sem_t empty;
char buffer[10];

void *producer()
{
int i,index=0;
for(i=0;i<26;i++)
{
sem_wait(&empty);
sem_wait(&mutex);
buffer[index]=i+64;
printf("Producer added %c to buffer\t with thread id %ld \n",buffer[index],pthread_self());
sem_post(&full);
sem_post(&mutex);
if(++index==10)
index=0;
/*if(rand()%3==0)
sleep(5);*/
}
}
void *consumer()
{
int i,index=0;
for(i=0;i<26;i++)
{
sem_wait(&full);
sem_wait(&mutex);
printf("Consumer consumed %c\n ",buffer[index]);
sem_post(&empty);
sem_post(&mutex);
if(++index==10)
index=0;
/*if(rand()%3==0)
sleep(5);*/
}
}

int main()
{
int i;
pthread_t tid1[10],tid2[10],tid3,tid4;
sem_init(&mutex,0,1);
sem_init(&full,0,0);
sem_init(&empty,0,10);
for(i=0;i<26;i++)
{
pthread_create(&tid1[i],NULL,producer,NULL);
pthread_create(&tid2[i],NULL,consumer,NULL);
//pthread_create(&tid3,NULL,consumer,NULL);
//pthread_create(&tid4,NULL,consumer,NULL);
pthread_join(tid1[i],NULL);
pthread_join(tid2[i],NULL);
sem_destroy(&mutex);
sem_destroy(&full);
sem_destroy(&empty);
}
}

//give -lpthread for threa